{"version":3,"sources":["AutoDismissAlert/AutoDismissAlert.js","auth/components/AuthenticatedRoute.js","apiConfig.js","auth/api.js","auth/messages.js","auth/components/Registration.js","auth/components/Login.js","auth/components/Logout.js","header/Header.js","profile/Profile.js","App.js","index.js"],"names":["AutoDismissAlert","props","handleClose","setState","show","state","this","timer","setInterval","clearInterval","variant","heading","message","Alert","dismissible","onClose","className","Heading","React","Component","AuthenticatedRoute","user","component","render","rest","to","apiUrls","apiUrl","window","location","hostname","registration","credentials","axios","method","url","data","name","email","password","password_confirmation","passwordConfirmation","login","console","log","registrationSuccess","registrationFailure","signInSuccess","signInFailure","signOutSuccess","changePasswordSuccess","changePasswordFailure","Registration","handleChange","event","target","value","onSignUp","preventDefault","alert","history","setUser","then","res","messages","push","catch","error","onSubmit","htmlFor","required","type","placeholder","onChange","withRouter","Login","onSignIn","Logout","clearUser","finally","authenticatedOptions","Fragment","unauthenticatedOptions","alwaysOptions","Header","Profile","last_login","sessions_count","App","alerts","map","index","key","path","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","appJsx","template","AlertTemplate","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4124d653.chunk.js","sourcesContent":["import React from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\n\nimport \"./AutoDismissAlert.scss\";\n\nclass AutoDismissAlert extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: true\n    };\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({ show: false });\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  handleClose = () => this.setState({ show: false });\n\n  render() {\n    const { variant, heading, message } = this.props;\n    return (\n      <Alert\n        dismissible\n        show={this.state.show}\n        variant={variant}\n        onClose={this.handleClose}\n      >\n        <div className=\"container\">\n          <Alert.Heading>{heading}</Alert.Heading>\n          <p className=\"alert-body\">{message}</p>\n        </div>\n      </Alert>\n    );\n  }\n}\n\nexport default AutoDismissAlert;\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n  // if props include a `user` object but no `render` then create route with `Component`\n  // if props do not include a `user` object then redirect to home\n  } else {\n    return <Route {...rest} render={props =>\n      user ? <Component {...props} /> : <Redirect to='/' />\n    } />\n  }\n}\n\nexport default AuthenticatedRoute\n","let apiUrl;\nconst apiUrls = {\n  production: \"https://pure-lake-78722.herokuapp.com\",\n  development: \"http://localhost:3001\"\n};\n\nif (window.location.hostname === \"localhost\") {\n  apiUrl = apiUrls.development;\n} else {\n  apiUrl = apiUrls.production;\n}\n\nexport default apiUrl;\n","import apiUrl from \"../apiConfig\";\nimport axios from \"axios\";\n\nexport const registration = credentials => {\n  return axios({\n    method: \"POST\",\n    url: apiUrl + \"/registrations\",\n    data: {\n      user: {\n        name: credentials.name,\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  });\n};\n\nexport const login = credentials => {\n  console.log(\"login\");\n  return axios({\n    url: apiUrl + \"/sessions\",\n    method: \"POST\",\n    data: {\n      user: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  });\n};\n\nexport const logout = user => {\n  return axios({\n    url: apiUrl + \"/logout\",\n    method: \"DELETE\"\n  });\n};\n","export default {\n  registrationSuccess: 'Succesfully registered! You\\'ve been signed in as well.',\n  registrationFailure: 'Registration failed. Email may be taked, or passwords' +\n   ' don\\'t match.',\n  signInSuccess: 'Welcome!',\n  signInFailure: 'Failed to sign in. Check your email and password and try' +\n                  ' again.',\n  signOutSuccess: 'Come back soon!',\n  changePasswordSuccess: 'Password changed successfully!',\n  changePasswordFailure: 'Failed to change passwords. Check your old password' +\n                         ' and try again.'\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { registration, login } from \"../api\";\nimport messages from \"../messages\";\n\nclass Registration extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\"\n    };\n  }\n\n  handleChange = event =>\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n\n  onSignUp = event => {\n    event.preventDefault();\n\n    const { alert, history, setUser } = this.props;\n\n    registration(this.state)\n      .then(() => login(this.state))\n      .then(res => setUser(res.data.user))\n      .then(() => alert(messages.registrationSuccess, \"success\"))\n      .then(() => history.push(\"/profile\"))\n      .catch(error => {\n        console.error(error);\n        this.setState({ email: \"\", password: \"\", passwordConfirmation: \"\" });\n        alert(messages.registrationFailure, \"danger\");\n      });\n  };\n\n  render() {\n    const { name, email, password, passwordConfirmation } = this.state;\n    return (\n      <form className=\"auth-form\" onSubmit={this.onSignUp}>\n        <h3>Register</h3>\n\n        <label htmlFor=\"name\">Name</label>\n        <input\n          required\n          name=\"name\"\n          value={name}\n          type=\"name\"\n          placeholder=\"Name\"\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"email\">Email</label>\n        <input\n          required\n          name=\"email\"\n          value={email}\n          type=\"email\"\n          placeholder=\"Email\"\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          required\n          name=\"password\"\n          value={password}\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"passwordConfirmation\">Confirm Password</label>\n        <input\n          required\n          name=\"passwordConfirmation\"\n          value={passwordConfirmation}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\">Register</button>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(Registration);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { login } from \"../api\";\nimport messages from \"../messages\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = event =>\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n\n  onSignIn = event => {\n    event.preventDefault();\n\n    const { alert, history, setUser } = this.props;\n\n    login(this.state)\n      .then(res => setUser(res.data.user))\n      .then(() => alert(messages.signInSuccess, \"success\"))\n      .then(() => history.push(\"/profile\"))\n      .catch(error => {\n        console.error(error);\n        this.setState({ email: \"\", password: \"\" });\n        alert(messages.signInFailure, \"danger\");\n      });\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div>\n        <form className=\"auth-form\" onSubmit={this.onSignIn}>\n          <h3>Login</h3>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            required\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            placeholder=\"Email\"\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            required\n            name=\"password\"\n            value={password}\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { logout } from \"../api\";\nimport messages from \"../messages\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    const { alert, history, clearUser, user } = this.props;\n\n    logout(user)\n      .finally(() => alert(messages.signOutSuccess, \"success\"))\n      .finally(() => history.push(\"/sessions\"))\n      .finally(() => clearUser());\n  }\n\n  render() {\n    return \"\";\n  }\n}\n\nexport default withRouter(Logout);\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport './Header.scss'\n\nconst authenticatedOptions = (\n  <React.Fragment>\n    <Link to=\"/logout\">Logout</Link>\n  </React.Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <React.Fragment>\n    <Link to=\"/registrations\">Register</Link>\n    <Link to=\"/sessions\">Login</Link>\n  </React.Fragment>\n)\n\nconst alwaysOptions = (\n  <React.Fragment>\n    <Link to=\"/\">Home</Link>\n  </React.Fragment>\n)\n\nconst Header = ({ user }) => (\n  <header className=\"main-header\">\n    <h1>Vital Frontend</h1>\n    <nav>\n      { user && <span>Welcome, {user.name}</span>}\n      { user ? authenticatedOptions : unauthenticatedOptions }\n      { alwaysOptions }\n    </nav>\n  </header>\n)\n\nexport default Header\n","import React from \"react\";\n\nimport \"./Profile.scss\";\n\nfunction Profile(res) {\n  return (\n    <div className=\"profile\">\n      <p>NAME: {res.user.name}</p>\n      <p>EMAIL: {res.user.email}</p>\n      <p>LAST LOGIN: {res.user.last_login}</p>\n      <p>NUMBER OF LOGINS: {res.user.sessions_count}</p>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport AutoDismissAlert from \"./AutoDismissAlert/AutoDismissAlert\";\n\nimport AuthenticatedRoute from \"./auth/components/AuthenticatedRoute\";\nimport Registration from \"./auth/components/Registration\";\nimport Login from \"./auth/components/Login\";\nimport Logout from \"./auth/components/Logout\";\nimport Header from \"./header/Header\";\nimport Profile from \"./profile/Profile\";\nimport \"./App.scss\";\n\n// import { AlertList } from \"react-bs-notifier\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      user: null,\n      alerts: []\n      // timeout: 2000,\n      // position: \"bottom-left\"\n    };\n  }\n\n  setUser = user => this.setState({ user });\n\n  clearUser = () => this.setState({ user: null });\n\n  alert = (message, type) => {\n    this.setState({ alerts: [...this.state.alerts, { message, type }] });\n  };\n\n  render() {\n    // const alert = useAlert();\n    // const { alerts, user, timeout, position } = this.state;\n    const { alerts, user } = this.state;\n    return (\n      <React.Fragment>\n        <Header user={user} />\n        {alerts.map((alert, index) => (\n          <AutoDismissAlert\n            key={index}\n            heading={alert.heading}\n            variant={alert.variant}\n            message={alert.message}\n          />\n        ))}\n        <main className=\"container\">\n          <Route\n            path=\"/registrations\"\n            render={() => (\n              <Registration alert={this.alert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path=\"/sessions\"\n            render={() => <Login alert={this.alert} setUser={this.setUser} />}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path=\"/logout\"\n            render={() => (\n              <Logout\n                alert={this.alert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n\n          <AuthenticatedRoute\n            user={user}\n            path=\"/profile\"\n            render={() => <Profile alert={this.alert} user={user} />}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from \"react-router-dom\";\n\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: \"30px\",\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n};\n\nconst appJsx = (\n  <HashRouter>\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </HashRouter>\n);\n\nReactDOM.render(appJsx, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}